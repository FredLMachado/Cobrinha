#include <stdio.h>
#include <iostream>
#include <windows.h>
#include <string>
#include <stdlib.h>
#include <time.h>
#include <stdlib.h>
#include <ctype.h>
#include <conio.h>

void colocar();
int score = 1 ;
void printmap();

bool game = true;

bool movecobra(int loc1, int loc2);
		void	moveup();
		void	moveright();
		void	movedown();
		void	moveleft();


int tamanho = 3;

struct {
	int A;
	int B;
	char tipo;
}Cobrinha[1000];



char A[22][47] = {{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},
{'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'}};



void printmap(){
	int i, i2;
	printf("\n");
	printf("\t\t\t\t\tscore:%d\n\n", score);
	for(i = 0 ; i <22 ; i++){
		printf("\t\t\t\t  ");
		for(i2 = 0 ; i2 < 47; i2++){
			printf("%c", A[i][i2]);
		}
		printf("\n");
	}


}



void getopti(int dirant){
	switch(toupper(getch())){

		case 87:
			fflush(stdin);
			if(dirant != 3){
			moveup();
			}else{
				movedown();
			}
		break ;


		case 65:
			fflush(stdin);
			if(dirant != 2){
			moveleft();
			}else{
			moveright();
			}
		break;

		case 68:
			fflush(stdin);
			if(dirant != 4){
			moveright();
			}else{
				moveleft();
			}
		break;

		case 83:
			fflush(stdin);
			if(dirant != 1){
			movedown();
			}else{
				moveup();
			}
		break;

		default:
			fflush(stdin);
			if(dirant == 1){
			moveup();
			}else if(dirant == 2){
			moveright();
			}else if(dirant == 3){
			movedown();
			}else{
			moveleft();
			}
	}
}









void moveup(){
	while(!kbhit() && game){
		Cobrinha[1].tipo = 'u';
		movecobra(Cobrinha[1].A-1, Cobrinha[1].B );
		system("cls");
		colocar();
		score++;
		printmap();
		Sleep(300 - tamanho);
		}
	getopti(1);
	}

void moveleft(){
	while(!kbhit() && game){
		Cobrinha[1].tipo = '>';
		movecobra(Cobrinha[1].A, Cobrinha[1].B-1);
		system("cls");
		colocar();
		score++;
		printmap();
		Sleep(300 - tamanho);
		}
	getopti(4);
	}

void moveright(){
	while(!kbhit() && game){
		Cobrinha[1].tipo = '<';
		movecobra(Cobrinha[1].A, Cobrinha[1].B+1);
		system("cls");
		colocar();
		score++;
		printmap();
		Sleep(300 - tamanho);
		}
	getopti(2);
	}

void movedown(){
	while(!kbhit() &&  game){
		Cobrinha[1].tipo = 'n';
		movecobra(Cobrinha[1].A+1, Cobrinha[1].B);
		system("cls");
		colocar();
		score++;
		printmap();
		Sleep(300 - tamanho);
		}
	getopti(3);
	}



bool movecobra(int loc1, int loc2){
	int last1, last2,lastt1, lastt2, num;
	if(A[loc1][loc2] == ' ' || A[loc1][loc2] == '@'){
		if(A[loc1][loc2] == '@'){
			tamanho++;
			Cobrinha[tamanho].tipo = 'O';
			score = score + 100;
		}
		for(num = 1; num <= tamanho; num++){

		last1 = Cobrinha[num].A;
		last2 = Cobrinha[num].B;
		A[loc1][loc2] = Cobrinha[num].tipo;
		Cobrinha[num].A = loc1;
		Cobrinha[num].B = loc2;
		loc1 = last1;
		loc2 = last2;
		A[last1][last2] = ' ';
		}
		return true;
		}else{
			game = false ;
	return false;}
}

void colocar(){
	int coisa1, coisa2;
	if(rand() % 101 >= 92 - tamanho){

	 coisa1 = 2 + rand() % 22 ;
	 coisa2 = 2 + rand() % 46 ;
 if(A[coisa1][coisa2] == ' '){
 	A[coisa1][coisa2] = '@';
 }
} }



int main(){
	srand(time(NULL));
	Cobrinha[1].tipo = 'C';
				Cobrinha[1].A = 11;
				Cobrinha[1].B = 25;

	A[11][25] = Cobrinha[2].tipo;
		Cobrinha[2].tipo = 'O';
				Cobrinha[2].A = 11;
				Cobrinha[2].B = 26;

	A[11][26] = Cobrinha[2].tipo;
		Cobrinha[3].tipo = 'O';
				Cobrinha[3].A = 11;
				Cobrinha[3].B = 27;

	A[11][27] = Cobrinha[3].tipo;

	while(game){
		moveleft();
	}
	return 0;
}
